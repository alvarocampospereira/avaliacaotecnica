unit UfrmConsultaNegociacao;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ufrmBaseChild, StdCtrls, Buttons, ExtCtrls, Grids, DBGrids,
  udtmNegociacao, DB;

type
  TfrmConsultaNegociacao = class(TfrmBaseChild)
    Label1: TLabel;
    btnPesquisarDistribuidor: TSpeedButton;
    edtCodigoDistribuidor: TEdit;
    edtNomeDistribuidor: TEdit;
    Label2: TLabel;
    SpeedButton1: TSpeedButton;
    edtCodigoProdutor: TEdit;
    edtNomeProdutor: TEdit;
    grdConsulta: TDBGrid;
    pnlBotoes: TPanel;
    btnConsultar: TBitBtn;
    btnLimpar: TBitBtn;
    BitBtn3: TBitBtn;
    btnImprimir: TBitBtn;
    dtsConsulta: TDataSource;
    procedure FormDestroy(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnConsultarClick(Sender: TObject);
    procedure btnImprimirClick(Sender: TObject);
    procedure btnLimparClick(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure btnPesquisarDistribuidorClick(Sender: TObject);
  private
    { Private declarations }
    FNegociacao: TdtmNegociacao;
    procedure Limpar;
    procedure imprimirConsulta;
    procedure Consultar;
  public
    { Public declarations }
  end;

var
  frmConsultaNegociacao: TfrmConsultaNegociacao;

implementation

uses UfrmPesquisaDistribuidor, UfrmPesquisaProdutor;

{$R *.dfm}

procedure TfrmConsultaNegociacao.BitBtn3Click(Sender: TObject);
begin
  inherited;
  Close;
end;

procedure TfrmConsultaNegociacao.btnConsultarClick(Sender: TObject);
begin
  inherited;
  Consultar;
end;

procedure TfrmConsultaNegociacao.btnImprimirClick(Sender: TObject);
begin
  inherited;
  imprimirConsulta;
end;

procedure TfrmConsultaNegociacao.btnLimparClick(Sender: TObject);
begin
  inherited;
  Limpar;
end;

procedure TfrmConsultaNegociacao.btnPesquisarDistribuidorClick(Sender: TObject);
begin
  inherited;
  frmPesquisaDistribuidor := TfrmPesquisaDistribuidor.Create(Self);
  frmPesquisaDistribuidor.ShowModal;
  if frmPesquisaDistribuidor.ID > 0 then
    begin
      edtCodigoDistribuidor.Text := inttoStr(frmPesquisaDistribuidor.ID);
      edtNomeDistribuidor.Text := frmPesquisaDistribuidor.Descricao;
    end;
  frmPesquisaDistribuidor.Free;
end;

procedure TfrmConsultaNegociacao.Consultar;
begin
  with FNegociacao.cdsConsultaNeg do
   begin
    Close;
    CommandText := 'SELECT NEGOCIACAO.status, NEGOCIACAO.id_produtor, PRODUTOR.nomeprodutor, ' +
      ' NEGOCIACAO.id_distribuidor, DISTRIBUIDOR.nomedistribuidor, ' +
      ' NEGOCIACAO.datacadastro, NEGOCIACAO.valortotal , NEGOCIACAO.dataaprovacao, ' +
      ' NEGOCIACAO.dataconclusao, NEGOCIACAO.datacancelamento, negociacao.codigocontrato ' +
      ' FROM NEGOCIACAO, DISTRIBUIDOR, PRODUTOR ' +
      ' WHERE NEGOCIACAO.id_distribuidor = DISTRIBUIDOR.id_distribuidor ' +
      '   AND NEGOCIACAO.id_produtor = PRODUTOR.id_produtor ';
    if trim(edtCodigoDistribuidor.Text) <> '' then
      CommandText := CommandText + ' AND NEGOCIACAO.id_distribuidor = ' + edtCodigoDistribuidor.Text;
    if Trim(edtCodigoProdutor.Text) <> '' then 
      CommandText := CommandText + ' AND NEGOCIACAO.id_produtor = ' + edtCodigoProdutor.Text;
    Open;
    
   end;

end;

procedure TfrmConsultaNegociacao.FormCreate(Sender: TObject);
begin
  inherited;
  FNegociacao := TdtmNegociacao.Create(Self);
  dtsConsulta.DataSet := FNegociacao.cdsConsultaNeg;
end;

procedure TfrmConsultaNegociacao.FormDestroy(Sender: TObject);
begin
  inherited;
  FNegociacao.Free;
end;

procedure TfrmConsultaNegociacao.imprimirConsulta;
var sTexto: TStringList;
begin
  // gerar um html para servir de relatorio
  sTexto := TStringList.Create;
  sTexto.Add('<!DOCTYPE html>');
  sTexto.Add('<html>
  sTexto.Add('<head>
  sTexto.Add('<style>
  sTexto.Add('table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}
</style>
</head>
<body>

<h2>HTML Table</h2>

<table>
  <tr>
    <th>Company</th>
    <th>Contact</th>
    <th>Country</th>
  </tr>
  <tr>
    <td>Alfreds Futterkiste</td>
    <td>Maria Anders</td>
    <td>Germany</td>
  </tr>
  <tr>
    <td>Centro comercial Moctezuma</td>
    <td>Francisco Chang</td>
    <td>Mexico</td>
  </tr>
  <tr>
    <td>Ernst Handel</td>
    <td>Roland Mendel</td>
    <td>Austria</td>
  </tr>
  <tr>
    <td>Island Trading</td>
    <td>Helen Bennett</td>
    <td>UK</td>
  </tr>
  <tr>
    <td>Laughing Bacchus Winecellars</td>
    <td>Yoshi Tannamuri</td>
    <td>Canada</td>
  </tr>
  <tr>
    <td>Magazzini Alimentari Riuniti</td>
    <td>Giovanni Rovelli</td>
    <td>Italy</td>
  </tr>
</table>

</body>
</html>

  sTexto.free;
end;

procedure TfrmConsultaNegociacao.Limpar;
begin
  edtCodigoDistribuidor.Clear;
  edtNomeDistribuidor.Clear;
  edtCodigoProdutor.Clear;
  edtNomeProdutor.Clear;
  edtCodigoProdutor.SetFocus;
  dtsConsulta.DataSet.Close;
end;

procedure TfrmConsultaNegociacao.SpeedButton1Click(Sender: TObject);
begin
  inherited;
  frmPesquisaProdutor := TfrmPesquisaProdutor.Create(Self);
  frmPesquisaProdutor.ShowModal;
  if frmPesquisaProdutor.ID > 0 then
    begin
      edtCodigoProdutor.Text := inttoStr(frmPesquisaProdutor.ID);
      edtNomeProdutor.Text := frmPesquisaProdutor.Descricao;
    end;
  frmPesquisaProdutor.Free;
end;

end.
